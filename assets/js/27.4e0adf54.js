(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{322:function(e,t,a){"use strict";a.r(t);var r=a(14),n=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",[e._v("Overview")]),e._v(" "),t("p",[e._v("There are two steps to configure the plugin.")]),e._v(" "),t("h2",{attrs:{id:"getting-started"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),t("p",[e._v("::: warn\nQuick Warning: Obviously, security is of the utmost importance. There are 2 explicit\nsecurity settings that may need to be toggled BUT it is crucial you understand\nthat one needs to be set to true.\n:::")]),e._v(" "),t("p",[e._v("See the following:")]),e._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// config/saml-sp.php")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[e._v("'requireResponseToBeSigned'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[e._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[e._v("'requireAssertionToBeSigned'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[e._v("true")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("Azure Ad or Azure Entra ID, by default, only signs the assertion so you may have\nset the "),t("code",[e._v("requireResponseToBeSigned")]),e._v(" to "),t("code",[e._v("false")]),e._v(" "),t("strong",[e._v("BUT THERE ARE NO CIRCUMSTANCES\nWHERE BOTH OF THESE CONFIGURATION WOULD BE FALSE!")]),e._v(" This is a huge security risk.\nThe signature ensures the sender which is cirtical.")]),e._v(" "),t("h3",{attrs:{id:"step-1-create-your-service-provider"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-create-your-service-provider"}},[e._v("#")]),e._v(" Step 1: Create your Service Provider")]),e._v(" "),t("ul",[t("li",[e._v("Navigation (from the sidebar): My Provider")]),e._v(" "),t("li",[e._v("Control Panel path reference: "),t("code",[e._v("/admin/saml-sp/metadata/my-provider")]),e._v(".")])]),e._v(" "),t("p",[e._v('To create your Service Provider, the sites entity definition, navigate to "My Provider". There you can\ngenerate a key pair for encryption and message signing, as well as, give your provider a label.\nGiving providers a label can be helpful when you have multiple environments. You can name it whatever you\nthink best but something like '),t("code",[e._v("Production")]),e._v(" can be useful.")]),e._v(" "),t("h3",{attrs:{id:"step-2-import-your-identity-provider-s-idp-metadata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-import-your-identity-provider-s-idp-metadata"}},[e._v("#")]),e._v(" Step 2: Import your Identity Provider's (IDP) metadata")]),e._v(" "),t("ul",[t("li",[e._v('Navigation (from the sidebar): Provider List > click the "+ Add Identity Provider" button')]),e._v(" "),t("li",[e._v("Control Panel path reference: "),t("code",[e._v("/admin/saml-sp/metadata/new-idp")]),e._v(".")])]),e._v(" "),t("p",[e._v('Retrieve your IDP\'s metadata and import it into Craft. The IDP metadata can be difficult to find but they do give access to this information.\nThe metadata has everything needed to communicate with the remote provider. Copy the contents of the metadata xml,\nnavigate to "+Add Identity Provider", and paste it into the metadata field. Label the IDP with a descriptor of the provider.\nFor example, if the IDP is ADFS it can be labeled as such: '),t("code",[e._v("ADFS")]),e._v('. From this view, you can click the "Configure" tab where\nyou can map attributes from the IDP response to the Craft user property.')])])}),[],!1,null,null,null);t.default=n.exports}}]);